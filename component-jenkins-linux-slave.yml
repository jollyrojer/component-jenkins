application:
  configuration:
    input.slave-linux-os: {image: "us-east-1/ami-1ba18d72", identity: ec2-user}
    input.slave-linux-instance-size: "m1.small"
    input.slave-linux-quantity: "0"
    input.recipe-url: "https://s3.amazonaws.com/qubell-starter-kit-artifacts/qubell-bazaar/component-jenkins-cookbooks-stable-bb9d12e.tar.gz"

  interfaces:
    input:
      slave-linux-os: "bind(jenkins-linux-slave#input.slave-linux-os)"
      slave-linux-instance-size: "bind(jenkins-linux-slave#input.slave-linux-instance-size)"
      slave-linux-quantity: "bind(jenkins-linux-slave#input.slave-linux-quantity)"
      recipe-url: "bind(jenkins-linux-slave#input.recipe-url)"
    manage:
      setup-linux-slave: "bind(jenkins-linux-slave#actions.setup-linux-slave)"
    output:
      jenkins-linux-slaves: "bind(jenkins-linux-slave#result.jenkins-linux-slaves)"

  components:
    jenkins-linux-slave:
      type: workflow.Instance
      interfaces:
        input:
          slave-linux-os: configuration(object)
          slave-linux-instance-size: configuration(string)
          slave-linux-quantity: configuration(string)
          recipe-url: configuration(string)
        actions:
          setup-linux-slave: receive-command(string agent-type, string availability, string jenkins-server-url, string jenkins-server-user, string jenkins-server-password, string jenkins-server-pubkey)
        result:
          jenkins-linux-slaves: publish-signal(object)

      configuration:
        configuration.triggers:
          input.slave-linux-quantity: update
        configuration.propagateStatus: [ update, setup-linux-slave ]
        configuration.workflows:
          update: &update
            parameters:
              - slave-linux-os:
                  description: Jenkins slave OS parameters
              - slave-linux-instance-size:
                  description: Slave instance size
              - slave-linux-quantity:
                  description: Quantity of slave nodes to run
            steps:
              - provision-vm:
                  action: provisionVms
                  parameters:
                    hardwareId: "{$.slave-linux-instance-size}"
                    imageId: "{$.slave-linux-os.image}"
                    vmIdentity: "{$.slave-linux-os.identity}"
                    targetQuantity: "{$.slave-linux-quantity}"
                    roleName: default
                  output:
                    jenkins-linux-slave-hosts: ips

              - get-hostname:
                  action: execrun
                  precedingPhases: [ provision-vm ]
                  parameters:
                    roles: [ default ]
                    isSudo: true
                    command:
                      - curl -s http://169.254.169.254/latest/meta-data/local-hostname
                  output:
                    jenkins-linux-slave-pdns: stdout

            return:
              jenkins-linux-slaves:
                value:
                  hosts: "{$.jenkins-linux-slave-hosts}"
                  pdns: "{$.jenkins-linux-slave-pdns}"
          launch: *update
          setup-linux-slave:
            parameters:
              - agent-type:
                  default: jnlp
                  description: Jenkins slave node agent type (jnlp, ssh)
              - availability:
                  default: always
                  description: Jenkins slave node availability (demand, always)
              - jenkins-server-url:
                  description: Jenkins server URL
              - jenkins-server-user:
                  description: Jenkins server admin user
              - jenkins-server-password:
                  description: Jenkins server admin password
              - jenkins-server-pubkey:
                  description: Jenkins server ssh public key

            steps:
              - install-jenkins-slave:
                  action: chefsolo
                  parameters:
                    recipeUrl: "{$.recipe-url}"
                    runList: [ "recipe[cookbook_qubell_jenkins::node]" ]
                    roles: [ default ]
                    jattrs:
                      jenkins:
                        server:
                          url: "{$.jenkins-server-url}"
                          pubkey: "{$.jenkins-server-pubkey}"
                        node:
                          agent_type: "{$.agent-type}"
                          availability: "{$.availability}"
                        cli:
                          username: "{$.jenkins-server-user}"
                          password: "{$.jenkins-server-password}"
